- name: Fetch AMI IDs from AWS
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Gather information about Ubuntu AMIs
      ec2_ami_info:
        region: "us-west-2"
        owners: ["099720109477"]  # ID for Canonical, the Ubuntu publisher
        filters:
          name: "ubuntu/images/hvm-ssd/ubuntu-*-*-amd64-server-*"
      register: ubuntu_ami_facts

    - name: Debug Ubuntu AMI facts
      debug:
        var: ubuntu_ami_facts

    - name: Gather information about Debian AMIs
      ec2_ami_info:
        region: "us-west-2"
        owners: ["136693071363"]  # ID for Debian publisher
        filters:
          name: "debian-*-amd64-*"
      register: debian_ami_facts

    - name: Debug Debian AMI facts
      debug:
        var: debian_ami_facts

    - name: Gather information about Windows AMIs
      ec2_ami_info:
        region: "us-west-2"
        owners: ["801119661308"]  # ID for Microsoft Windows Server
        filters:
          name: "Windows_Server-2019-English-Full-Base-*"
      register: windows_ami_facts

    - name: Debug Windows AMI facts
      debug:
        var: windows_ami_facts

    - name: Ensure Ubuntu AMI list is not empty
      fail:
        msg: "No Ubuntu AMIs found"
      when: ubuntu_ami_facts.images | length == 0

    - name: Set fact for the latest Ubuntu AMI
      set_fact:
        ubuntu_ami_id: "{{ (ubuntu_ami_facts.images | selectattr('creation_date', 'defined') | sort(attribute='creation_date') | last).image_id if ubuntu_ami_facts.images | length > 0 else None }}"
      when: ubuntu_ami_facts.images | length > 0

    - name: Ensure Debian AMI list is not empty
      fail:
        msg: "No Debian AMIs found"
      when: debian_ami_facts.images | length == 0

    - name: Set fact for the latest Debian AMI
      set_fact:
        debian_ami_id: "{{ (debian_ami_facts.images | selectattr('creation_date', 'defined') | sort(attribute='creation_date') | last).image_id if debian_ami_facts.images | length > 0 else None }}"
      when: debian_ami_facts.images | length > 0

    - name: Ensure Windows AMI list is not empty
      fail:
        msg: "No Windows AMIs found"
      when: windows_ami_facts.images | length == 0

    - name: Set fact for the latest Windows AMI
      set_fact:
        windows_ami_id: "{{ (windows_ami_facts.images | selectattr('creation_date', 'defined') | sort(attribute='creation_date') | last).image_id if windows_ami_facts.images | length > 0 else None }}"
      when: windows_ami_facts.images | length > 0

    - name: Create or update inventory file
      copy:
        content: |
          all:
            children:
              ami:
                vars:
                  builder_type: "ami"
                children:
                  ubuntu_ami:
                    vars:
                      os_type: "ubuntu"
                      source_ami: "{{ ubuntu_ami_id }}"
                    hosts:
                      ubuntu_ami_host:
                  debian_ami:
                    vars:
                      os_type: "debian"
                      source_ami: "{{ debian_ami_id }}"
                    hosts:
                      debian_ami_host:
                  windows_ami:
                    vars:
                      os_type: "windows"
                      source_ami: "{{ windows_ami_id }}"
                    hosts:
                      windows_ami_host:
        dest: "./inventory.yml"
